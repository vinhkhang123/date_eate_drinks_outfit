const mongoose = require('mongoose');
require('dotenv').config();

// ‚öôÔ∏è URI local & Atlas
const LOCAL_URI = 'mongodb://127.0.0.1:27017/date_eat_drinks_outfit';
const ATLAS_URI = process.env.MONGO_URI; // l·∫•y t·ª´ .env

// ‚öôÔ∏è Schema gi·ªëng nhau ·ªü c·∫£ 2 n∆°i
const sheetSchema = new mongoose.Schema({
  khuvuc: String,
  muc: String,
  thoigian: String,
  quan: String,
  diachi: String,
  mieuta: String,
  giatien: String,
  bosung: String,
});

// B1: K·∫øt n·ªëi local MongoDB
const localConn = mongoose.createConnection(LOCAL_URI);
const LocalModel = localConn.model('googlesheetdatas', sheetSchema);

// B2: K·∫øt n·ªëi MongoDB Atlas
const atlasConn = mongoose.createConnection(ATLAS_URI);
const AtlasModel = atlasConn.model('googlesheetdatas', sheetSchema);

// H√†m chuy·ªÉn d·ªØ li·ªáu
async function migrate() {
  try {
    await localConn.asPromise();
    await atlasConn.asPromise();

    console.log("‚úÖ ƒê√£ k·∫øt n·ªëi c·∫£ local v√† Atlas");

    const data = await LocalModel.find({});
    console.log(`üì¶ T√¨m th·∫•y ${data.length} b·∫£n ghi`);

    await AtlasModel.insertMany(data);
    console.log("‚úÖ ƒê√£ chuy·ªÉn d·ªØ li·ªáu sang MongoDB Atlas");

  } catch (err) {
    console.error("‚ùå L·ªói khi chuy·ªÉn:", err.message);
  } finally {
    await localConn.close();
    await atlasConn.close();
  }
}

migrate();
